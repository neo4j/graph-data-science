apply plugin: 'java-library'

description = 'Neo4j Graph Data Science :: Path Finding Algorithms Procedure Facade'

group = 'org.neo4j.gds'

dependencies {

    api project(':algorithms-facade-api')

    compileOnly openGds.jetbrains.annotations

    compileOnly(neo4j.graphdb.api) { transitive = false }
    // TODO: we only need `neo4j.graph.algo` because of `PathImpl` maybe copy it around ðŸ¤”
    compileOnly(neo4j.graph.algo) { transitive = false }

    // Algorithm results are here, we need to move them out
    implementation project(':algo')

    // Various result builders are here
    implementation project(':algo-common')

    implementation project(':algorithms-compute-business-facade')
    implementation project(':algorithms-facade-common')

    // this is needed because of `AlgorithmProcessingTimings`
    implementation project(':algorithms-machinery')

    // `CypherMapWrapper` lives here
    implementation project(':annotations')

    // `BaseConfig` lives here
    implementation project(':config-api')

    // this is needed because of `WritePropertyConfig`
    implementation project(':core')

    implementation project(':graph-schema-api')

    implementation project(':logging')

    // this is needed because of `MemoryEstimation`
    implementation project(':memory-usage')

    implementation project(':ml-core')

    implementation project(':neo4j-api')

    implementation project(':path-finding-mutate-steps')
    implementation project(':path-finding-write-steps')

    // we bring this in only to use `PregelConfig` and `Partitioning` enum
    implementation project(':pregel')

    // only `JobIdConfig` is what we need from this module
    implementation project(':progress-tracking')

    implementation project(':string-formatting')

    implementation project(':termination')

    // Test Dependencies
    testImplementation project(':test-utils')
    testImplementation openGds.mockito.junit.jupiter
}
